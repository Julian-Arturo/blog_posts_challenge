// Mocks generated by Mockito 5.4.4 from annotations
// in blog_posts_challenge/test/feature/blog/data/data_source/post_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:blog_posts_challenge/core/common/client_http.dart' as _i3;
import 'package:blog_posts_challenge/core/common/models/http_response_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHttpResponseModel_0 extends _i1.SmartFake
    implements _i2.HttpResponseModel {
  _FakeHttpResponseModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ClientHttp].
///
/// See the documentation for Mockito's code generation for more information.
class MockClientHttp extends _i1.Mock implements _i3.ClientHttp {
  MockClientHttp() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get timeoutMessage => (super.noSuchMethod(
        Invocation.getter(#timeoutMessage),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#timeoutMessage),
        ),
      ) as String);

  @override
  String get errorInternet => (super.noSuchMethod(
        Invocation.getter(#errorInternet),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#errorInternet),
        ),
      ) as String);

  @override
  String get serviceError => (super.noSuchMethod(
        Invocation.getter(#serviceError),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#serviceError),
        ),
      ) as String);

  @override
  _i5.Future<_i2.HttpResponseModel> get({required String? endpoint}) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
          {#endpoint: endpoint},
        ),
        returnValue:
            _i5.Future<_i2.HttpResponseModel>.value(_FakeHttpResponseModel_0(
          this,
          Invocation.method(
            #get,
            [],
            {#endpoint: endpoint},
          ),
        )),
      ) as _i5.Future<_i2.HttpResponseModel>);
}
